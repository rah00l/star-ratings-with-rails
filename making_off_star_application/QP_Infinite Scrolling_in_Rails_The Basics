Infinite Scrolling in Rails: The Basics

1. Required Gems:(Add in Genmfile)
gem 'will_paginate', '~> 3.0.5'
gem 'betterlorem', '~> 0.1.2'
gem 'bootstrap-sass', '~> 3.0.3.0'
gem 'bootstrap-will_paginate', '~> 0.0.10'

2. Run
bundle install

3. Now add
//= require bootstrap

to the application.js and
	@import "bootstrap";

to the application.css.scss


4 . Modify into controller
articles_controller.rb
@articles = Article.paginate(page: params[:page], per_page: 15).order('created_at DESC')

5. In view 
 a. (index.html.erb)

<h1>My articles</h1>

<div id="articles">
  <%= render @prticles %>
</div>
 
<div id="infinite-scrolling">
  <%= will_paginate %>
</div>

b.
_article.html.erb

<h2><%= link_to article.name, article %>  <small><em><%= article.timestamp %></em></small></h2>
  <div class="content"><%= simple_format(article.content) %></div>


6. In model - article.rb
def timestamp
  created_at.strftime('%d %B %Y %H:%M:%S')
end


7. Add following code into - pagination.js.coffee

jQuery ->
  page_regexp = /\d+$/

  pushPage = (page) ->
    History.pushState null, "InfiniteScrolling | Page " + page, "?page=" + page
    return

  window.preparePagination = (el) ->
    el.waypoint (direction) ->
      $this = $(this)
      unless $this.hasClass('first-page') && direction is 'up'
        page = parseInt($this.data('page'), 10)
        page -= 1 if direction is 'up'
        page_el = $($('#static-pagination li').get(page))
        unless page_el.hasClass('active')
          $('#static-pagination .active').removeClass('active')
          pushPage(page)
          page_el.addClass('active')
    return

  hash = window.location.hash
  if hash.match(/page=\d+/i)
    window.location.hash = '' # Otherwise the hash will remain after the page reload
    window.location.search = '?page=' + hash.match(/page=(\d+)/i)[1]

  if $('#infinite-scrolling').size() > 0
    preparePagination($('.page-delimiter'))
    $(window).bindWithDelay 'scroll', ->
      more_posts_url = $('#infinite-scrolling .next_page a').attr('href')
      if more_posts_url && $(window).scrollTop() > $(document).height() - $(window).height() - 60
        $('#infinite-scrolling .pagination').html(
          '<img src="/assets/ajax-loader.gif" alt="Loading..." title="Loading..." />')
        $.getScript more_posts_url, ->
          pushPage(more_posts_url.match(page_regexp)[0])
      return
    , 100

  return

 8. Download loader image,waypoints.coffee, and kept it at 
   /assets/ajax-loader.gif
   /assets/javascript/waypoints.coffee  
   /assets/javascript/bind_with_delay.js
   /assets/javascript/jquery.history.js



 9. Add ajax response format @ Article index action..
respond_to do |format|
  format.html
  format.js
end  


10.index.js.erb

$('#articles').append('<%= j render @articles %>');
<% if @articles.next_page %>
  $('.pagination').replaceWith('<%= j will_paginate @articles %>');
<% else %>
  $(window).off('scroll');
  $('.pagination').remove();
<% end %>


